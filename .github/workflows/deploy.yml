name: Deploy AWS Portfolio

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout Code
        uses: actions/checkout@v3

      - name: ‚úÖ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: ‚úÖ Make all scripts executable
        run: chmod +x infra/*.sh enable-cors.sh

      # 1Ô∏è‚É£ IAM Role
      - name: ‚úÖ Create IAM Role (if not exists)
        run: |
          if ! aws iam get-role --role-name lambda-dynamodb-role 2>/dev/null; then
            ./infra/create-iam.sh
          else
            echo "‚úÖ IAM role already exists. Skipping."
          fi

      # 2Ô∏è‚É£ DynamoDB
      - name: ‚úÖ Create DynamoDB Table (if not exists)
        run: |
          if ! aws dynamodb describe-table --table-name ContactMessages 2>/dev/null; then
            ./infra/create-dynamodb.sh
          else
            echo "‚úÖ DynamoDB table already exists. Skipping."
          fi

      # 3Ô∏è‚É£ Lambda
      - name: ‚úÖ Deploy Lambda Function
        run: ./infra/create-lambda.sh

      # üîÅ MOVE API GATEWAY STEP EARLIER HERE
      - name: üöÄ Setup API Gateway (NOW BEFORE S3)
        run: ./infra/create-apigateway.sh

      # üîÅ Enable CORS (before injecting config.js)
      - name: ‚úÖ Enable CORS on API Gateway
        run: ./enable-cors.sh

      # 4Ô∏è‚É£ Create S3 Bucket and Upload Frontend
      - name: ‚úÖ Create S3 Bucket + Upload Frontend
        run: ./infra/create-s3.sh

      # 5Ô∏è‚É£ Inject correct API URL into config.js
      - name: ‚úÖ Inject Real API URL into config.js and Upload
        run: |
          echo "üîÑ Updating frontend config.js with real API Gateway URL..."
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='ContactAPI'].id" --output text)
          API_URL="https://${API_ID}.execute-api.ap-south-1.amazonaws.com/prod/contact"
          echo "window.API_GATEWAY_URL = \"$API_URL\";" > frontend/config.js

          echo "üì§ Re-uploading updated frontend to S3..."
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          BUCKET_NAME="siddhant-portfolio-${ACCOUNT_ID}"
          aws s3 sync ./frontend s3://$BUCKET_NAME/ --delete \
            --exact-timestamps \
            --cache-control "no-cache, no-store, must-revalidate"

      # üîü Smoke Test API
      - name: ‚úÖ Test Deployed API Endpoint
        run: |
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='ContactAPI'].id" --output text)
          URL="https://${API_ID}.execute-api.ap-south-1.amazonaws.com/prod/contact"
          echo "üåê Testing API endpoint: $URL"
          curl -s -X POST "$URL" -H "Content-Type: application/json" \
            -d '{"name":"Test","email":"test@example.com","message":"Hello from GitHub Actions"}'
