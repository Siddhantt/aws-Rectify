name: Deploy AWS Portfolio

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Make shell scripts executable
        run: chmod +x infra/*.sh

      # âœ… S3 Bucket (idempotent)
      - name: Create and configure S3 bucket
        run: |
          if ! aws s3api head-bucket --bucket siddhant-portfolio-2025 2>/dev/null; then
            ./infra/create-s3.sh
          else
            echo "âœ… S3 bucket already exists. Skipping creation."
          fi

      # âœ… DynamoDB Table (idempotent)
      - name: Create DynamoDB table
        run: |
          if ! aws dynamodb describe-table --table-name ContactMessages 2>/dev/null; then
            ./infra/create-dynamodb.sh
          else
            echo "âœ… DynamoDB table already exists. Skipping creation."
          fi

      # âœ… IAM Role for Lambda (idempotent)
      - name: Create IAM role for Lambda
        run: |
          if ! aws iam get-role --role-name lambda-dynamodb-role 2>/dev/null; then
            ./infra/create-iam.sh
          else
            echo "âœ… IAM role already exists. Skipping creation."
          fi

      # âœ… Lambda Function (idempotent)
      - name: Deploy Lambda function
        run: |
          if ! aws lambda get-function --function-name myLambdaFunction 2>/dev/null; then
            ./infra/create-lambda.sh
          else
            echo "âœ… Lambda function already exists. Skipping creation."
          fi

      # âœ… API Gateway (idempotent by name)
      - name: Setup API Gateway
        run: |
          API_ID=$(aws apigateway get-rest-apis \
            --query "items[?name=='ContactAPI'].id" \
            --output text)

          if [ -z "$API_ID" ]; then
            echo "ðŸ“¡ No API Gateway named 'ContactAPI' found. Creating..."
            ./infra/create-apigateway.sh
          else
            echo "âœ… API Gateway 'ContactAPI' already exists with ID: $API_ID. Skipping creation."
          fi

      # âœ… Test the /contact endpoint
      - name: Test /contact API
        run: |
          API_ID=$(aws apigateway get-rest-apis \
            --query "items[?name=='ContactAPI'].id" \
            --output text)

          URL="https://$API_ID.execute-api.ap-south-1.amazonaws.com/prod/contact"
          echo "ðŸš€ Testing deployed API endpoint: $URL"
          curl -i -X POST "$URL" -H "Content-Type: application/json" \
            -d '{"name":"Test","email":"test@example.com","message":"Hi"}'
